package org.niteco.selenium.platform.rc;

import static org.exoplatform.selenium.TestLogger.info;

import org.exoplatform.selenium.Utils;
import org.exoplatform.selenium.platform.ManageLogInOut;
import org.exoplatform.selenium.platform.PlatformBase;
import org.niteco.selenium.platform.objectdatabase.rs.CandidateInformation;
import org.niteco.selenium.platform.objectdatabase.rs.addCandidateForm;
import org.niteco.selenium.platform.objectdatabase.rs.skillInformation;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.*;

public class RCFlow extends PlatformBase{

	ManageLogInOut magAc;
	RCHomepage rcHome;
	CandidatesHomePage canHome;
	CandidateProfile canProf;
	ExamPage exPage;
	RCLocators rcLoc;
	CandidateInformation candidateInfoData;
	addCandidateForm addCanFormData;
	skillInformation skillInfoData;
	
	@BeforeClass
	public void setUpBeforeTest() throws Exception{
		initSeleniumTest();
		getDefaultUserPass(userDataFilePath,defaultSheet,isUseFile,jdbcDriver,dbUrl,user,pass,sqlUser);
		driver.get(baseUrl);
		magAc = new ManageLogInOut(driver);
		rcHome = new RCHomepage(driver);
		canHome = new CandidatesHomePage(driver);
		canProf = new CandidateProfile(driver);
		exPage = new ExamPage(driver);
		rcLoc = new RCLocators();
		candidateInfoData = new CandidateInformation();
		candidateInfoData.setData(candidateDataFilePath,defaultSheet,true);
		addCanFormData = new addCandidateForm();
		addCanFormData.setData(addCanFormDataFilePath,defaultSheet,true);
		skillInfoData = new skillInformation();
		skillInfoData.setData(skillInfoDataFilePath,defaultSheet,true);
		magAc.signIn(DATA_USER1, DATA_PASS);
		
	}
	
	/**
	 * Case ID:116816.
	 * Test Case Name: Approve/ Disapprove answer.
	 * Pre-Condition: 
	 * Post-Condition: 
	 */
	@Test
	public  void test01_flowiMis() {

		String fullName = candidateInfoData.getFullNameByIndex(0); //tutest13
		String firstName = candidateInfoData.getFirstNameByIndex(0); //tu13
		String lastName = candidateInfoData.getLastNameByIndex(0); //luu13
		String email = candidateInfoData.getEmailByIndex(0); //tu13@gmail.com
		String phone = candidateInfoData.getPhoneByIndex(0); //123456789
		String dateOfBirth = candidateInfoData.getDateOfBirthByIndex(0); //01/01/1990
		String gender = candidateInfoData.getGenderByIndex(0); //Male
		String nationality = candidateInfoData.getNationalityByIndex(0); //Vietnam
		String region = candidateInfoData.getRegionByIndex(0); //Ha Noi
		String locality = candidateInfoData.getLocalityByIndex(0); //Hoan Kiem
		String address = candidateInfoData.getAdressByIndex(0); //48 Tho Nhuom
		String postalCode = candidateInfoData.getPostalCodeByIndex(0); //12345
		String currentSalary = candidateInfoData.getCurrentSalaryCodeByIndex(0); //200
		String expecedSalary = candidateInfoData.getExpectedSalaryByIndex(0); //400
		String plannedStartDate = candidateInfoData.getPlanedStartDateByIndex(0); //02/29/2016
		String workingLocation = candidateInfoData.getWorkingLocationByIndex(0); //Hanoi
		String filePath = candidateInfoData.getFilePathByIndex(0); //TestData\CV_Tu3.docx
		String fileName = candidateInfoData.getFileNameByIndex(0); //CV_Tu3.docx
		
		String[] skill = {skillInfoData.getSkillByIndex(3), skillInfoData.getSkillByIndex(4), skillInfoData.getSkillByIndex(5)}; //C, Pascal, Java
		String[] level = {skillInfoData.getLevelByIndex(0), skillInfoData.getLevelByIndex(1), skillInfoData.getLevelByIndex(2)}; //1, 2, 3
		String[] lastUsed = {"2015", "2014", "2013"};
		
		String source = addCanFormData.getSourceByIndex(10); //Refer
		String job = addCanFormData.getJobByIndex(65); //Test automation developer
		
		String examsGroup = "HoangHa_Group";
		String examsDuration = "1";
		String examsBadgeNumber = "1";
		
		
		info("Go to candidate tab");
		rcHome.goToCandidateTab();
		
		info("Create a new candidate");
		canHome.goToAddCandidates();
		canHome.addCandidate(fullName, firstName, lastName, email, phone, true, source, true, job, filePath);
		canHome.Create();
		canProf.verifyBasicCandidateProfile(fullName, firstName, lastName, phone, email, job, fileName);
		
		info("Go to a specific candidate by search candidate");
		rcHome.goToCandidateTab();
		canHome.searchACandidate(fullName);
		canHome.goToSpecificCandidate(fullName);
		
		info("Add information for candidate");
		canProf.goToAddInformationForCandiDate();
		
		info("Add exam");
		canProf.goToAddExam();
		canProf.createExam(true, examsGroup, examsDuration);
		canProf.verifyExamsBadgeNumber(examsBadgeNumber);
		canProf.goToExamsTabInAS();
		
		info("Go to copy test link name and paste in another browser");
		canProf.goToSpecificExamInAS();
		WebElement testLink = waitForAndGetElement(canProf.ELEMENT_RS_CANDIDATE_PROFILE_AS_EXAMS_TEST_LINK, DEFAULT_TIMEOUT, 1);
		String link = testLink.getText();
		
		Utils.pause(2000);
		
		info("Open new window");
		driver.manage().deleteAllCookies();
		driver.get(link);
		
		info("Enter candidate information in exam");
		exPage.enterPersonalInformationInExam(fullName, firstName, lastName, dateOfBirth, gender, nationality);
		exPage.enterContactInformationInExam(phone, email, nationality, region, locality, address, postalCode, "");
		exPage.enterRecruitmenttInformationInExam(currentSalary, expecedSalary, plannedStartDate, workingLocation);
		exPage.enterSkillsInformationInExam(skill, level, lastUsed);
		
		info("Go to continue exam");
		exPage.continueToExam();
		
		info("Start exam");
		exPage.startExam();
		info("Answer quetion 1");
		click(waitForAndGetElement(rcLoc.ELEMENT_RS_EXAM_PAGE_DO_EXAM_QUESTION12, DEFAULT_TIMEOUT, 1));
		exPage.nextQuestion();
		info("Answer quetion 2");
		click(waitForAndGetElement(rcLoc.ELEMENT_RS_EXAM_PAGE_DO_EXAM_QUESTION12, DEFAULT_TIMEOUT, 1));
		exPage.nextQuestion();
		info("Answer quetion 3");
		click(waitForAndGetElement(rcLoc.ELEMENT_RS_EXAM_PAGE_DO_EXAM_QUESTION3, DEFAULT_TIMEOUT, 1));
		exPage.endExam();
		
		info("Check data was updated for candidate");
		driver.get(baseUrl);
		magAc.signIn(DATA_USER1, DATA_PASS);
		
		info("Go to a specific candidate by search candidate");
		rcHome.goToCandidateTab();
		canHome.searchACandidate(fullName);
		canHome.goToSpecificCandidate(fullName);
	}
}
