package org.niteco.selenium.platform.rc;

import static org.exoplatform.selenium.TestLogger.info;

import org.exoplatform.selenium.Utils;
import org.exoplatform.selenium.platform.ManageLogInOut;
import org.exoplatform.selenium.platform.PlatformBase;
import org.niteco.selenium.platform.objectdatabase.rs.CandidateInformation;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.testng.annotations.*;

public class RCFlow extends PlatformBase{

	ManageLogInOut magAc;
	RCHomepage rcHome;
	CandidatesHomePage canHome;
	CandidateProfile canProf;
	ExamPage exPage;
	RCLocators rcLoc;
	CandidateInformation candidateInfoData;
	
	@BeforeClass
	public void setUpBeforeTest() throws Exception{
		initSeleniumTest();
		getDefaultUserPass(userDataFilePath,defaultSheet,isUseFile,jdbcDriver,dbUrl,user,pass,sqlUser);
		driver.get(baseUrl);
		magAc = new ManageLogInOut(driver);
		rcHome = new RCHomepage(driver);
		canHome = new CandidatesHomePage(driver);
		canProf = new CandidateProfile(driver);
		exPage = new ExamPage(driver);
		rcLoc = new RCLocators();
		candidateInfoData = new CandidateInformation();
		candidateInfoData.setData(candidateDataFilePath,defaultSheet,true);
		//magAc.signIn(DATA_USER1, DATA_PASS);
		
	}
	
	/**
	 * Case ID:116816.
	 * Test Case Name: Approve/ Disapprove answer.
	 * Pre-Condition: 
	 * Post-Condition: 
	 */
	@Test
	public  void test01_flowiMis() {
		/*String fullName = "tutest13";
		String firstName = "tu13";
		String lastName = "luu13";
		String email = "tu13@gmail.com";
		String phone = "123456789";
		String file = "TestData\\CV_Tu3.docx";
		String dateOfBirth = "01/01/1990";
		String gender = "Male";
		String nationality = "Vietnam";
		String region = "Ha Noi";
		String locality = "Hoan Kiem";
		String address = "48 Tho Nhuom";
		String postalCode = "12345";
		String currentSalary = "200";
		String expecedSalary = "400";
		String plannedStartDate = "02/29/2016";
		String workingLocation = "Hanoi";*/
		
		String file = "TestData\\CV_Tu3.docx";
		String fullName = candidateInfoData.getFullNameByIndex(0);
		String firstName = candidateInfoData.getFirstNameByIndex(0);
		String lastName = candidateInfoData.getLastNameByIndex(0);
		String email = candidateInfoData.getEmailByIndex(0);
		String phone = candidateInfoData.getPhoneByIndex(0);
		String dateOfBirth = candidateInfoData.getDateOfBirthByIndex(0);
		String gender = candidateInfoData.getGenderByIndex(0);
		String nationality = candidateInfoData.getNationalityByIndex(0);
		String region = candidateInfoData.getRegionByIndex(0);
		String locality = candidateInfoData.getLocalityByIndex(0);
		String address = candidateInfoData.getAdressByIndex(0);
		String postalCode = candidateInfoData.getPostalCodeByIndex(0);
		String currentSalary = candidateInfoData.getCurrentSalaryCodeByIndex(0);
		String expecedSalary = candidateInfoData.getExpectedSalaryByIndex(0);
		String plannedStartDate = candidateInfoData.getPlanedStartDateByIndex(0);
		String workingLocation = candidateInfoData.getWorkingLocationByIndex(0);
		
		
		String[] skill = {"C", "Pascal", "Java"};
		String[] level = {"1", "2", "3"};
		String[] lastUsed = {"2015", "2014", "2013"};
		
		
		String source = "Refer";
		String job = "Test automation developer";
		
		String fileName = "CV_Tu3.docx";
		String examsGroup = "HoangHa_Group";
		String examsDuration = "1";
		String examsBadgeNumber = "1";
		
		
		info("Go to candidate tab");
		rcHome.goToCandidateTab();
		
		info("Create a new candidate");
		canHome.goToAddCandidates();
		canHome.addCandidate(fullName, firstName, lastName, email, phone, true, source, true, job, file);
		canHome.Create();
		canProf.verifyBasicCandidateProfile(fullName, firstName, lastName, phone, email, job, fileName);
		
		info("Go to a specific candidate");
		rcHome.goToCandidateTab();
		canHome.goToSpecificCandidate(fullName);
		
		info("Add information for candidate");
		canProf.goToAddInformationForCandiDate();
		
		info("Add exam");
		canProf.goToAddExam();
		canProf.createExam(true, examsGroup, examsDuration);
		canProf.verifyExamsBadgeNumber(examsBadgeNumber);
		canProf.goToExamsTabInAS();
		
		info("Go to copy test link name and paste in another browser");
		canProf.goToSpecificExamInAS();
		WebElement testLink = waitForAndGetElement(canProf.ELEMENT_RS_CANDIDATE_PROFILE_AS_EXAMS_TEST_LINK, DEFAULT_TIMEOUT, 1);
		String link = testLink.getText();
		
		Utils.pause(2000);
		//WebDriver driver2 = initFFDriver();
		WebDriver driver2 = new FirefoxDriver();
		chromeFlag = false;
		driver2.manage().window().maximize();
		driver2.navigate().refresh();
		magAc = new ManageLogInOut(driver2);
		rcHome = new RCHomepage(driver2);
		canHome = new CandidatesHomePage(driver2);
		canProf = new CandidateProfile(driver2);
		exPage = new ExamPage(driver2);
		rcLoc = new RCLocators();
		//magAc.signIn(DATA_USER1, DATA_PASS);
		driver2.get(link);
		
		info("Enter candidate information in exam");
		exPage.enterPersonalInformationInExam(fullName, firstName, lastName, dateOfBirth, gender, nationality);
		exPage.enterContactInformationInExam(phone, email, nationality, region, locality, address, postalCode, "");
		exPage.enterRecruitmenttInformationInExam(currentSalary, expecedSalary, plannedStartDate, workingLocation);
		exPage.enterSkillsInformationInExam(skill, level, lastUsed);
		
		info("Go to continue exam");
		exPage.continueToExam();
		
		info("Start exam");
		exPage.startExam();
		info("Answer quetion 1");
		click(waitForAndGetElement(rcLoc.ELEMENT_RS_EXAM_PAGE_DO_EXAM_QUESTION12, DEFAULT_TIMEOUT, 1));
		exPage.nextQuestion();
		info("Answer quetion 2");
		click(waitForAndGetElement(rcLoc.ELEMENT_RS_EXAM_PAGE_DO_EXAM_QUESTION12, DEFAULT_TIMEOUT, 1));
		exPage.nextQuestion();
		info("Answer quetion 3");
		click(waitForAndGetElement(rcLoc.ELEMENT_RS_EXAM_PAGE_DO_EXAM_QUESTION3, DEFAULT_TIMEOUT, 1));
		exPage.endExam();
	}
}
